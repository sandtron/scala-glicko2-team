## the logback configuration
logback.path=logging/logback-info.xml

## the glicko2 algorithm for team evaluation.
##
## COMPOSITE (default)
##
#### The Composite Opponent Update Method considers each outcome as a match against asingle
#### player possessing the average rating and deviation of the opposing team players.
#### Ineffect, the update method creates a composite player out of the opposing team
#### and uses thisplayer’s resulting rating and deviation when updating a player.8
####
#### For example, if Alice competes against a team consisting of Bob, Carol, Dan, and Eve,
#### the game will update Alice’s rating by considering the outcome as a 1­versus­1
#### match againsta composite player having the average rating and deviation of Bob, Carol, Dan, and Eve.
####
##
## INDIVIDUAL
##
#### The Individual Update Method takes the naive approach to updating players after a game.
#### This method treats each match outcome as a set of wins or losses, one for each member of the opposing team.
#### This method takes advantage of rating systems like Elo or Glicko by abstracting
#### a team match as a set of 1­versus­1 matches.
#### 
#### For example, consider a
#### game where Alice participates on a team versus an opposing team consisting of
#### Bob, Carol, Dan, and Eve. If Alice’s team wins,
#### the game updates Alice’srating by considering this game as four wins:
#### one against Bob, one against Carol, one againstDan, and one against Eve.
glicko2.team.algorithm=composite

## the number of days for a player to not play a game before their rank decays. (decay not yet implemented)
# glicko2.team.ratingPeriod=30

## player settings
player.default.rating=1500
player.default.deviation=350
player.default.volatility=0.06



## Only csv is supported(not implementated, this is always csv for now)
# matchSource.type=csv
## Path to the match history file
matchSource.path=match-history.csv
## Date format of date/time for match times in the matchSource csv
matchSource.csv.dateFormat=yyyy-MM-dd HH:mm
